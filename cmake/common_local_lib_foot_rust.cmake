set(CARGO_TARGET_DIR "${CMAKE_CURRENT_BINARY_DIR}")

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(RUST_STATIC_LIB_PATH "${CARGO_TARGET_DIR}/debug/lib${PROJECT_NAME}.${JVX_STATIC_EXTENSION}")
  set(CARGO_BUILD_OPTIONS "")
else()
  set(RUST_STATIC_LIB_PATH "${CARGO_TARGET_DIR}/release/lib${PROJECT_NAME}.${JVX_STATIC_EXTENSION}")
  set(CARGO_BUILD_OPTIONS "-r")
endif()

if(JVX_SYSTEM_USE_DATA_FORMAT_FLOAT)
  set(_CARGO_FEATURES "${LOCAL_CARGO_FEATURES} jvx-system-use-data-format-float")
else()
  set(_CARGO_FEATURES "${LOCAL_CARGO_FEATURES}")
endif()

if(NOT "${_CARGO_FEATURES}" STREQUAL "")
  set(CARGO_BUILD_OPTIONS "${CARGO_BUILD_OPTIONS} -F \"${_CARGO_FEATURES}\"")
endif()

if(DEFINED LOCAL_CARGO_OPTIONS AND NOT "${LOCAL_CARGO_OPTIONS}" STREQUAL "")
  set(CARGO_BUILD_OPTIONS "${CARGO_BUILD_OPTIONS} ${LOCAL_CARGO_OPTIONS}")
endif()

add_library(${JVX_TARGET_NAME_STATIC} STATIC IMPORTED GLOBAL)
set_target_properties(${JVX_TARGET_NAME_STATIC} PROPERTIES IMPORTED_LOCATION "${RUST_STATIC_LIB_PATH}")

add_custom_target(
  cargo_build
  BYPRODUCTS ${RUST_STATIC_LIB_PATH}
  COMMAND cargo build --target-dir ${CARGO_TARGET_DIR} --lib ${CARGO_BUILD_OPTIONS}
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  COMMENT "Build STATIC Rust Library ${JVX_TARGET_NAME_STATIC} with options: ${CARGO_BUILD_OPTIONS}"
)

add_dependencies(${JVX_TARGET_NAME_STATIC} cargo_build)
